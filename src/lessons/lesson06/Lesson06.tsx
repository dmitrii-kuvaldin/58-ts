export default function Lesson06() {
  // ! typescript

  // * string

  let username: string = 'Pavel';
  username = 'Daria';

  console.log(username);

  // * number

  let number: number = 42;
  number = 4.33;

  console.log(number);

  // * boolean

  let isAdmin: boolean = true;
  isAdmin = 10 < 2; // —ç—Ç–æ false

  console.log(isAdmin);

  // * null | undefined

  const nothing: undefined = undefined;
  let empty: null = null;

  console.log(nothing, empty);

  // * union type (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤)

  let value: string | number = 42;
  value = 'my favorite number' + 117;

  console.log(value);

  // * type literals (–ª–∏—Ç–µ—Ä–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã)

  let userRole: 'ADMIN' | 'CLIENT' | 'GUEST' = 'ADMIN';
  userRole = 'CLIENT';

  console.log(userRole);

  // ? –æ–ø–µ—Ä–∞—Ç–æ—Ä typeof –∏–∑ JavaScript –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º –≤ –æ—Ç–≤–µ—Ç JS —Ç–∏–ø, –∞ –Ω–µ —Ç–∏–ø TypeScript - –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã
  // console.log('type: ', typeof userRole);

  // * arrays (–º–∞—Å—Å–∏–≤—ã)

  const colors: string[] = ['red', 'green', 'blue'];
  colors.push('cyan');

  console.log(colors);

  // * tupel (–∫–æ—Ä—Ç–µ–∂)
  // –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ readonly –º—ã –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç–∞–∫–æ–π –º–∞—Å—Å–∏–≤ –æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

  let person: [string, number] = ['John', 35];
  person.push('Johnson');

  console.log(person);

  let planet: readonly [string, boolean] = ['Earth', true];
  // planet.push(1000000) –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É
  console.log(planet);

  // * functions
  // –≤ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π  —è–≤–ª—è–µ—Ç—Å—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  // —Ç–∏–ø–∏–∑–∞—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ —è–≤–Ω–æ–π —Ç–∞–∫ –∏ –Ω–µ —è–≤–Ω–æ–π

  // * –ø—Ä–∏–º–µ—Ä 1

  function sum(a: number, b: number) {
    return a + b;
  }

  sum(44, 66);
  // sum('hello ', 'ts')

  // * –ø—Ä–∏–º–µ—Ä 2

  function makeString(a: number, b: number): string {
    return '—Å—É–º–º–∞: ' + (a + b);
  }

  console.log(makeString(30, 25));

  // * –ø—Ä–∏–º–µ—Ä 3

  const showMessage = (message: string | number): void => {
    console.log('your message: ' + message);
  };

  showMessage('üôá‚Äç‚ôÇÔ∏è');
  showMessage(33);

  // * any
  // —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ—Ä–æ–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å –ª—é–±—ã–µ —Ç–∏–ø—ã
  // –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–ª–∏ —Ç–æ–ª—å–∫–æ –≤ –∫—Ä–∞–π–Ω–∏—Ö —Å–ª—É—á–∞—è—Ö

  let someValue:any = 'whatever you want';
  someValue = 10
  someValue = undefined


  // ! ts-ignore | ts-nocheck
  // –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤ –¥–ª—è –æ–¥–Ω–æ–π —Å—Ç—Ä–æ—á–∫–∏
  // –Ω–æ –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ ü´£
  // –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –ª–∏–±–æ –≤—Å–µ–≥–æ —Ñ–∞–π–ª–∞

  // @ts-ignore
  colors.push(42);

  return (
    <div>
      <h1>Lesson 06: TypeScript pt1 üíÅ‚Äç‚ôÇÔ∏è</h1>
      <p>–°–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞ —ç—Ç–æ–º —É—Ä–æ–∫–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ</p>
    </div>
  );
}
